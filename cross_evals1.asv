%s1 = gen_dataset(1000,false);
%data =  my_rep(s1);

c = 10;
n = 1000;
cvIdx = crossvalind('Kfold',n,c);

for i=1:c
    testIdx = find(cvIdx ==i);
    trainIdx = find(cvIdx ~=i);
    trainData = prnist([0:9],trainIdx);
    testData = prnist([0:9],testIdx);

    a = my_rep(trainData);
    a_t = my_rep(testData);  

    pcaT = pca(a);
    a = a*pcaT;
    a_t = a
    [knn1,k1,e1] =knnc(a1,1);
    knne = evalc(pca1*knn1,pca2*knn2)

    pars1  = parzenc(a1,1);
    parse = evalc(pca1*pars1,pca2*pars2)

    nmc1 = nmc(a1);
    nmce = evalc(pca1*nmc1, pca2*nmc2)

    ldc1 = ldc(a1);
    ldce = evalc(pca1*ldc1,pca2*ldc2)

    qdc1 = qdc(a1);
    qdce = evalc(pca1*qdc1, pca2*qdc2)

    fisher1 = fisherc(a1);
    fishere = evalc(pca1*fisher1,pca2*fisher2)

    log1 = loglc(a1);
    loge = evalc(pca1*log1,pca2*log2)

    tree1 = treec(a1);
    treee = evalc(pca1*tree1,pca2*tree2)
end

function e = evalc(w,testData)
    true_labels = getlabels(testData);
    ass_labels = testData * w * labeld;   
    incorrPreds = ass_labels(:,7) ~= true_labels(:,7);
    e = sum(incorrPreds)/size(incorrPreds,1);
end